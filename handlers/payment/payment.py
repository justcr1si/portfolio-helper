from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from handlers.payment.states import PaymentState
from handlers.user_handlers.keyboard import get_cancel_keyboard, get_main_menu

payment_router = Router()


@payment_router.message(F.text == 'üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
async def add_balance(message: Message, state: FSMContext):
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (—Ä—É–±):',
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(PaymentState.waiting_for_payment)


@payment_router.message(PaymentState.waiting_for_payment, F.text)
async def process_payment(message: Message, state: FSMContext):
    try:
        amount = float(message.text)

        await message.answer(
            f'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è {amount}‚ÇΩ',
            reply_markup=get_cancel_keyboard()
        )
    except ValueError:
        await message.answer(
            '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n'
            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',
            reply_markup=get_cancel_keyboard()
        )
    finally:
        await state.clear()


@payment_router.message(F.text == 'üîô –ù–∞–∑–∞–¥')
async def cancel_handler(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', reply_markup=get_main_menu())
